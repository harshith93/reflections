How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It clearly explained where the mistake was done. Helped me in rectifying that bug in an efficient way.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It'll help in such a way that if you've made any important changes to the code and for some reason you want them back after a long period of time, we can go to the previous version and get the info back without putting efforts that take up way too much time.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It gives us the ease of committing when we make a logical change or fix a bug rather than automatically saving. But it also involves the person forgetting to commit until many changes are made.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git has an advantage called repository where it commits all the files once you want to save. And google docs doesn't have such directory system.

How can you use the commands git log and git diff to view the history of files?

    git log displays the information about the commits in the repository but git diff only finds differences between two commits.

How might using version control make you more confident to make changes that
could break something?

    It makes me confident of making a mistake at any time because I can still go back and eliminate the change that broke the application.

Now that you have your workspace set up, what do you want to try using Git for?

    To practice version-control for different projects.







